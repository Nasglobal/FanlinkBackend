version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql_db
    env_file:
      - .env  # Load credentials from .env file
    ports:
      - "3307:3306"
    networks:
      - mynetwork
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "$MYSQL_USER", "-p$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  django:
    build: .
    container_name: django_app
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "fanlink.wsgi:application"]
    networks:
      - mynetwork
    volumes:
      - static_volume:/app/static  # Mount static files
      - ./media:/app/media  # Persist uploaded media files

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    depends_on:
      - django
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql_data:
  static_volume:
